objects class

Constructive method

To create an object we have to use the statement:
	"public VARIABLE name_variable = new VARIABLE();"
	It's optional to declare the variable in public

To create a definition to an object it has to be created in other class
	
Example in class: person and personOjbect

Getters / setters

Getter 

Is a function that you have to declare it in the class object
Example:

public String getName(){
	return this.name;
}

Setter

Is a function that you have to declare it in the class object
Example:

public void setName(String new_Name){
	this.name = new_Name;
}

You can make this process auto with right click on the code, source, generate Setters and Getters

You can make the constructor with super and extends.

Example:

public class Professor extends Person {
	private String puestoTrabajo;
}

public Professor (String new_name, String new_City, integer new_age, String puestoTrabajo) {
	super(new_age, new_city, new_edad);
	this.puestoTrabajo = puestoTrabajo;
}

What is "@Override":
Its used to over write one existing function to add more code.

Type protected:
It's private but it can be access by other class that inherit.

The "super":
Its used to call the top class of the second class that inherit the top class.

Polyphrom: 

We can add different objects that inherit from the same exact class.

Other example:
for (Personas Pers : array) {
	if (Pers instanceof Alumno) {
		Alumno x = (Alumno) Pers;
		x.gritar();
	} else {
		Professor y = (Professor);
		y.sermon();
	}

}

